import numpy as np

def D2_Variable_4(m,h):
    e_l = np.zeros(m)
    e_l[0] = 1
    
    e_r = np.zeros(m)
    e_r[-1] = 1
    
    H = np.diag(np.ones(m))
    H[0:4,0:4] = np.diag(np.array([17/48, 59/48, 43/48, 49/48]))
    H[-4:,-4:] = np.diag(np.array([49/48, 43/48, 59/48, 17/48]))
    H=H*h;
    
    HI = np.linalg.inv(H)
    
    Q = -1/12*np.diag(np.ones(m-2),2) + 8/12*np.diag(np.ones(m-1),1) - 8/12*np.diag(np.ones(m-1),-1) + 1/12*np.diag(np.ones(m-2),-2)
    Q_U = np.array([[0, 0.59e2/0.96e2, -0.1e1/0.12e2, -0.1e1/0.32e2],[-0.59e2/0.96e2, 0, 0.59e2/0.96e2, 0],[0.1e1/0.12e2, -0.59e2/0.96e2, 0, 0.59e2/0.96e2],[0.1e1/0.32e2, 0, -0.59e2/0.96e2, 0]])
    Q[0:4,0:4] = Q_U;
    Q[-4:,-4:] = np.flipud(np.fliplr(-Q_U));
    
    D1 = HI@(Q - 0.5*np.tensordot(e_l, e_l, axes=0) + 1/2*np.tensordot(e_r, e_r, axes=0))
    
    
    d_stenc = np.array([-0.11e2/0.6e1, 3, -0.3e1/0.2e1, 0.1e1/0.3e1])/h
    d1_l = np.zeros(m)
    d1_l[0:4] = d_stenc
    d1_r = np.zeros(m)
    d1_r[-4:] = np.flip(-d_stenc)
    
    def D2_fun(c):
        M = np.zeros((m,m))
        
        for i in range(3,m-3):
            M[i,i-2:i+3] = np.array([-c[i-1] / 0.6e1 + c[i-2] / 0.8e1 + c[i] / 0.8e1,
                                     -c[i-2] / 0.6e1 - c[i+1] / 0.6e1 - c[i-1] / 0.2e1 - c[i] / 0.2e1,
                                     c[i-2] / 0.24e2 + 0.5e1 / 0.6e1 * c[i-1] + 0.5e1 / 0.6e1 * c[i+1] + c[i+2] / 0.24e2 + 0.3e1 / 0.4e1 * c[i],
                                     -c[i-1] / 0.6e1 - c[i+2] / 0.6e1 - c[i] / 0.2e1 - c[i+1] / 0.2e1,
                                     -c[i+1] / 0.6e1 + c[i] / 0.8e1 + c[i+2] / 0.8e1])
            
        M[:6,:6] = np.array([
             [0.12e2 / 0.17e2 * c[0] + 0.59e2 / 0.192e3 * c[1] + 0.27010400129e11 / 0.345067064608e12 * c[2] + 0.69462376031e11 / 0.2070402387648e13 * c[3], 
             -0.59e2 / 0.68e2 * c[0] - 0.6025413881e10 / 0.21126554976e11 * c[2] - 0.537416663e9 / 0.7042184992e10 * c[3],
             0.2e1 / 0.17e2 * c[0] - 0.59e2 / 0.192e3 * c[1] + 0.213318005e9 / 0.16049630912e11 * c[3] + 0.2083938599e10 / 0.8024815456e10 * c[2],
             0.3e1 / 0.68e2 * c[0] - 0.1244724001e10 / 0.21126554976e11 * c[2] + 0.752806667e9 / 0.21126554976e11 * c[3], 
             0.49579087e8 / 0.10149031312e11 * c[2] - 0.49579087e8 / 0.10149031312e11 * c[3] ,
             -c[3] / 0.784e3 + c[2] / 0.784e3]
            ,[ 
             -0.59e2 / 0.68e2 * c[0] - 0.6025413881e10 / 0.21126554976e11 * c[2] - 0.537416663e9 / 0.7042184992e10 * c[3],
             0.3481e4 / 0.3264e4 * c[0] + 0.9258282831623875e16 / 0.7669235228057664e16 * c[2] + 0.236024329996203e15 / 0.1278205871342944e16 * c[3],
             -0.59e2 / 0.408e3 * c[0] - 0.29294615794607e14 / 0.29725717938208e14 * c[2] - 0.2944673881023e13 / 0.29725717938208e14 * c[3],
             -0.59e2 / 0.1088e4 * c[0] + 0.260297319232891e15 / 0.2556411742685888e16 * c[2] - 0.60834186813841e14 / 0.1278205871342944e16 * c[3],
             -0.1328188692663e13 / 0.37594290333616e14 * c[2] + 0.1328188692663e13 / 0.37594290333616e14 * c[3],
             -0.8673e4 / 0.2904112e7 * c[2] + 0.8673e4 / 0.2904112e7 * c[3]]
             ,[ 
             0.2e1 / 0.17e2 * c[0] - 0.59e2 / 0.192e3 * c[1] + 0.213318005e9 / 0.16049630912e11 * c[3] + 0.2083938599e10 / 0.8024815456e10 * c[2],
             -0.59e2 / 0.408e3 * c[0] - 0.29294615794607e14 / 0.29725717938208e14 * c[2] - 0.2944673881023e13 / 0.29725717938208e14 * c[3],
             c[0] / 0.51e2 + 0.59e2 / 0.192e3 * c[1] + 0.13777050223300597e17 / 0.26218083221499456e17 * c[3] + 0.564461e6 / 0.13384296e8 * c[4] + 0.378288882302546512209e21 / 0.270764341349677687456e21 * c[2] ,
             c[0] / 0.136e3 - 0.125059e6 / 0.743572e6 * c[4] - 0.4836340090442187227e19 / 0.5525802884687299744e19 * c[2] - 0.17220493277981e14 / 0.89177153814624e14 * c[3],
             -0.10532412077335e14 / 0.42840005263888e14 * c[3] + 0.1613976761032884305e19 / 0.7963657098519931984e19 * c[2] + 0.564461e6 / 0.4461432e7 * c[4] ,
             -0.960119e6 / 0.1280713392e10 * c[3] - 0.3391e4 / 0.6692148e7 * c[4] + 0.33235054191e11 / 0.26452850508784e14 * c[2]]
             ,[
             0.3e1 / 0.68e2 * c[0] - 0.1244724001e10 / 0.21126554976e11 * c[2] + 0.752806667e9 / 0.21126554976e11 * c[3] ,
             -0.59e2 / 0.1088e4 * c[0] + 0.260297319232891e15 / 0.2556411742685888e16 * c[2] - 0.60834186813841e14 / 0.1278205871342944e16 * c[3] ,
             c[0] / 0.136e3 - 0.125059e6 / 0.743572e6 * c[4] - 0.4836340090442187227e19 / 0.5525802884687299744e19 * c[2] - 0.17220493277981e14 / 0.89177153814624e14 * c[3] ,
             0.3e1 / 0.1088e4 * c[0] + 0.507284006600757858213e21 / 0.475219048083107777984e21 * c[2] + 0.1869103e7 / 0.2230716e7 * c[4] + c[5] / 0.24e2 + 0.1950062198436997e16 / 0.3834617614028832e16 * c[3] ,
             -0.4959271814984644613e19 / 0.20965546238960637264e20 * c[2] - c[5] / 0.6e1 - 0.15998714909649e14 / 0.37594290333616e14 * c[3] - 0.375177e6 / 0.743572e6 * c[4] ,
             -0.368395e6 / 0.2230716e7 * c[4] + 0.752806667e9 / 0.539854092016e12 * c[2] + 0.1063649e7 / 0.8712336e7 * c[3] + c[5] / 0.8e1]
             ,[
             0.49579087e8 / 0.10149031312e11 * c[2] - 0.49579087e8 / 0.10149031312e11 * c[3] ,
             -0.1328188692663e13 / 0.37594290333616e14 * c[2] + 0.1328188692663e13 / 0.37594290333616e14 * c[3],
             -0.10532412077335e14 / 0.42840005263888e14 * c[3] + 0.1613976761032884305e19 / 0.7963657098519931984e19 * c[2] + 0.564461e6 / 0.4461432e7 * c[4],
             -0.4959271814984644613e19 / 0.20965546238960637264e20 * c[2] - c[5] / 0.6e1 - 0.15998714909649e14 / 0.37594290333616e14 * c[3] - 0.375177e6 / 0.743572e6 * c[4] ,
             0.8386761355510099813e19 / 0.128413970713633903242e21 * c[2] + 0.2224717261773437e16 / 0.2763180339520776e16 * c[3] + 0.5e1 / 0.6e1 * c[5] + c[6] / 0.24e2 + 0.280535e6 / 0.371786e6 * c[4],
             -0.35039615e8 / 0.213452232e9 * c[3] - c[6] / 0.6e1 - 0.13091810925e11 / 0.13226425254392e14 * c[2] - 0.1118749e7 / 0.2230716e7 * c[4] - c[5] / 0.2e1]
             ,[
             -c[3] / 0.784e3 + c[2] / 0.784e3,
             -0.8673e4 / 0.2904112e7 * c[2] + 0.8673e4 / 0.2904112e7 * c[3],
             -0.960119e6 / 0.1280713392e10 * c[3] - 0.3391e4 / 0.6692148e7 * c[4] + 0.33235054191e11 / 0.26452850508784e14 * c[2],
             -0.368395e6 / 0.2230716e7 * c[4] + 0.752806667e9 / 0.539854092016e12 * c[2] + 0.1063649e7 / 0.8712336e7 * c[3] + c[5] / 0.8e1,
             -0.35039615e8 / 0.213452232e9 * c[3] - c[6] / 0.6e1 - 0.13091810925e11 / 0.13226425254392e14 * c[2] - 0.1118749e7 / 0.2230716e7 * c[4] - c[5] / 0.2e1 ,
             0.3290636e7 / 0.80044587e8 * c[3] + 0.5580181e7 / 0.6692148e7 * c[4] + 0.5e1 / 0.6e1 * c[6] + c[7] / 0.24e2 + 0.660204843e9 / 0.13226425254392e14 * c[2] + 0.3e1 / 0.4e1 * c[5]]])
                        
        M[m-6:,m-6:] = np.array([
            [c[m-8] / 0.24e2 + 0.5e1 / 0.6e1 * c[m-7] + 0.5580181e7 / 0.6692148e7 * c[m-5] + 0.4887707739997e13 / 0.119037827289528e15 * c[m-4] + 0.3e1 / 0.4e1 * c[m-6] + 0.660204843e9 / 0.13226425254392e14 * c[m-3] + 0.660204843e9 / 0.13226425254392e14 * c[m-2],
            -c[m-7] / 0.6e1 - 0.1618585929605e13 / 0.9919818940794e13 * c[m-4] - c[m-6] / 0.2e1 - 0.1118749e7 / 0.2230716e7 * c[m-5] - 0.13091810925e11 / 0.13226425254392e14 * c[m-3] - 0.13091810925e11 / 0.13226425254392e14 * c[m-2],
            -0.368395e6 / 0.2230716e7 * c[m-5] + c[m-6] / 0.8e1 + 0.48866620889e11 / 0.404890569012e12 * c[m-4] + 0.752806667e9 / 0.539854092016e12 * c[m-3] + 0.752806667e9 / 0.539854092016e12 * c[m-2],
            -0.3391e4 / 0.6692148e7 * c[m-5] - 0.238797444493e12 / 0.119037827289528e15 * c[m-4] + 0.33235054191e11 / 0.26452850508784e14 * c[m-3] + 0.33235054191e11 / 0.26452850508784e14 * c[m-2] ,
            -0.8673e4 / 0.2904112e7 * c[m-3] - 0.8673e4 / 0.2904112e7 * c[m-2] + 0.8673e4 / 0.1452056e7 * c[m-4] ,
            -c[m-4] / 0.392e3 + c[m-3] / 0.784e3 + c[m-2] / 0.784e3]
            ,[
            -c[m-7] / 0.6e1 - 0.1618585929605e13 / 0.9919818940794e13 * c[m-4] - c[m-6] / 0.2e1 - 0.1118749e7 / 0.2230716e7 * c[m-5] - 0.13091810925e11 / 0.13226425254392e14 * c[m-3] - 0.13091810925e11 / 0.13226425254392e14 * c[m-2] ,
            c[m-7] / 0.24e2 + 0.5e1 / 0.6e1 * c[m-6] + 0.3896014498639e13 / 0.4959909470397e13 * c[m-4] + 0.8386761355510099813e19 / 0.128413970713633903242e21 * c[m-3] + 0.280535e6 / 0.371786e6 * c[m-5] + 0.3360696339136261875e19 / 0.171218627618178537656e21 * c[m-2],
            -c[m-6] / 0.6e1 - 0.4959271814984644613e19 / 0.20965546238960637264e20 * c[m-3] - 0.375177e6 / 0.743572e6 * c[m-5] - 0.13425842714e11 / 0.33740880751e11 * c[m-4] - 0.193247108773400725e18 / 0.6988515412986879088e19 * c[m-2],
            -0.365281640980e12 / 0.1653303156799e13 * c[m-4] + 0.564461e6 / 0.4461432e7 * c[m-5] + 0.1613976761032884305e19 / 0.7963657098519931984e19 * c[m-3] - 0.198407225513315475e18 / 0.7963657098519931984e19 * c[m-2],
            -0.1328188692663e13 / 0.37594290333616e14 * c[m-3] + 0.2226377963775e13 / 0.37594290333616e14 * c[m-2] - 0.8673e4 / 0.363014e6 * c[m-4],
            c[m-4] / 0.49e2 + 0.49579087e8 / 0.10149031312e11 * c[m-3] - 0.256702175e9 / 0.10149031312e11 * c[m-2]]
            ,[
            -0.368395e6 / 0.2230716e7 * c[m-5] + c[m-6] / 0.8e1 + 0.48866620889e11 / 0.404890569012e12 * c[m-4] + 0.752806667e9 / 0.539854092016e12 * c[m-3] + 0.752806667e9 / 0.539854092016e12 * c[m-2],
            -c[m-6] / 0.6e1 - 0.4959271814984644613e19 / 0.20965546238960637264e20 * c[m-3] - 0.375177e6 / 0.743572e6 * c[m-5] - 0.13425842714e11 / 0.33740880751e11 * c[m-4] - 0.193247108773400725e18 / 0.6988515412986879088e19 * c[m-2] ,
            c[m-6] / 0.24e2 + 0.1869103e7 / 0.2230716e7 * c[m-5] + 0.507284006600757858213e21 / 0.475219048083107777984e21 * c[m-3] + 0.3e1 / 0.1088e4 * c[m-1] + 0.31688435395e11 / 0.67481761502e11 * c[m-4] + 0.27769176016102795561e20 / 0.712828572124661666976e21 * c[m-2] ,
            -0.125059e6 / 0.743572e6 * c[m-5] + c[m-1] / 0.136e3 - 0.23099342648e11 / 0.101222642253e12 * c[m-4] - 0.4836340090442187227e19 / 0.5525802884687299744e19 * c[m-3] + 0.193950157930938693e18 / 0.5525802884687299744e19 * c[m-2] ,
            0.260297319232891e15 / 0.2556411742685888e16 * c[m-3] - 0.59e2 / 0.1088e4 * c[m-1] - 0.106641839640553e15 / 0.1278205871342944e16 * c[m-2] + 0.26019e5 / 0.726028e6 * c[m-4],
            -0.1244724001e10 / 0.21126554976e11 * c[m-3] + 0.3e1 / 0.68e2 * c[m-1] + 0.752806667e9 / 0.21126554976e11 * c[m-2]]
            ,[
            -0.3391e4 / 0.6692148e7 * c[m-5] - 0.238797444493e12 / 0.119037827289528e15 * c[m-4] + 0.33235054191e11 / 0.26452850508784e14 * c[m-3] + 0.33235054191e11 / 0.26452850508784e14 * c[m-2],
            -0.365281640980e12 / 0.1653303156799e13 * c[m-4] + 0.564461e6 / 0.4461432e7 * c[m-5] + 0.1613976761032884305e19 / 0.7963657098519931984e19 * c[m-3] - 0.198407225513315475e18 / 0.7963657098519931984e19 * c[m-2],
            -0.125059e6 / 0.743572e6 * c[m-5] + c[m-1] / 0.136e3 - 0.23099342648e11 / 0.101222642253e12 * c[m-4] - 0.4836340090442187227e19 / 0.5525802884687299744e19 * c[m-3] + 0.193950157930938693e18 / 0.5525802884687299744e19 * c[m-2],
            0.564461e6 / 0.13384296e8 * c[m-5] + 0.470299699916357e15 / 0.952302618316224e15 * c[m-4] + 0.550597048646198778781e21 / 0.1624586048098066124736e22 * c[m-2] + c[m-1] / 0.51e2 + 0.378288882302546512209e21 / 0.270764341349677687456e21 * c[m-3],
            -0.59e2 / 0.408e3 * c[m-1] - 0.29294615794607e14 / 0.29725717938208e14 * c[m-3] - 0.2234477713167e13 / 0.29725717938208e14 * c[m-2] - 0.8673e4 / 0.363014e6 * c[m-4],
            -0.59e2 / 0.3136e4 * c[m-4] - 0.13249937023e11 / 0.48148892736e11 * c[m-2] + 0.2e1 / 0.17e2 * c[m-1] + 0.2083938599e10 / 0.8024815456e10 * c[m-3]]
            ,[
            -0.8673e4 / 0.2904112e7 * c[m-3] - 0.8673e4 / 0.2904112e7 * c[m-2] + 0.8673e4 / 0.1452056e7 * c[m-4],
            -0.1328188692663e13 / 0.37594290333616e14 * c[m-3] + 0.2226377963775e13 / 0.37594290333616e14 * c[m-2] - 0.8673e4 / 0.363014e6 * c[m-4],
            0.260297319232891e15 / 0.2556411742685888e16 * c[m-3] - 0.59e2 / 0.1088e4 * c[m-1] - 0.106641839640553e15 / 0.1278205871342944e16 * c[m-2] + 0.26019e5 / 0.726028e6 * c[m-4],
            -0.59e2 / 0.408e3 * c[m-1] - 0.29294615794607e14 / 0.29725717938208e14 * c[m-3] - 0.2234477713167e13 / 0.29725717938208e14 * c[m-2] - 0.8673e4 / 0.363014e6 * c[m-4],
            0.9258282831623875e16 / 0.7669235228057664e16 * c[m-3] + 0.3481e4 / 0.3264e4 * c[m-1] + 0.228389721191751e15 / 0.1278205871342944e16 * c[m-2] + 0.8673e4 / 0.1452056e7 * c[m-4],
            -0.6025413881e10 / 0.21126554976e11 * c[m-3] - 0.59e2 / 0.68e2 * c[m-1] - 0.537416663e9 / 0.7042184992e10 * c[m-2]]
            ,[
            -c[m-4] / 0.392e3 + c[m-3] / 0.784e3 + c[m-2] / 0.784e3,
            c[m-4] / 0.49e2 + 0.49579087e8 / 0.10149031312e11 * c[m-3] - 0.256702175e9 / 0.10149031312e11 * c[m-2],
            -0.1244724001e10 / 0.21126554976e11 * c[m-3] + 0.3e1 / 0.68e2 * c[m-1] + 0.752806667e9 / 0.21126554976e11 * c[m-2],
            -0.59e2 / 0.3136e4 * c[m-4] - 0.13249937023e11 / 0.48148892736e11 * c[m-2] + 0.2e1 / 0.17e2 * c[m-1] + 0.2083938599e10 / 0.8024815456e10 * c[m-3],
            -0.6025413881e10 / 0.21126554976e11 * c[m-3] - 0.59e2 / 0.68e2 * c[m-1] - 0.537416663e9 / 0.7042184992e10 * c[m-2],
            0.3e1 / 0.3136e4 * c[m-4] + 0.27010400129e11 / 0.345067064608e12 * c[m-3] + 0.234566387291e12 / 0.690134129216e12 * c[m-2] + 0.12e2 / 0.17e2 * c[m-1]]])
                                
        M = M/h          
        D2 = HI@(-M - np.diag(c)@(np.tensordot(e_l, d1_l, axes=0) - np.tensordot(e_r, d1_r, axes=0)))
        return D2
        
    return H,HI,D1,D2_fun,e_l,e_r,d1_l,d1_r
                                
                            